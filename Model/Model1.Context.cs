//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class requeteEntities : DbContext
    {
        public requeteEntities()
            : base("name=requeteEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<action_User_Request> action_User_Request { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<BAL_User> BAL_User { get; set; }
        public virtual DbSet<Communes> Communes { get; set; }
        public virtual DbSet<LevelOfStrucure> LevelOfStrucure { get; set; }
        public virtual DbSet<Link> Links { get; set; }
        public virtual DbSet<Message_Request> Message_Request { get; set; }
        public virtual DbSet<Mission> Missions { get; set; }
        public virtual DbSet<Objet_Disp> Objet_Disp { get; set; }
        public virtual DbSet<Permissions_Role> Permissions_Role { get; set; }
        public virtual DbSet<PhaseObject> PhaseObject { get; set; }
        public virtual DbSet<relance> relances { get; set; }
        public virtual DbSet<requerant> requerant { get; set; }
        public virtual DbSet<State_Request> State_Request { get; set; }
        public virtual DbSet<Structure> Structures { get; set; }
        public virtual DbSet<StructureUser> StructureUser { get; set; }
        public virtual DbSet<StructureWilaya> StructureWilayas { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Transmission> Transmission { get; set; }
        public virtual DbSet<types> types { get; set; }
        public virtual DbSet<UserManageStructure> UserManageStructures { get; set; }
        public virtual DbSet<Voie_Transmission> Voie_Transmission { get; set; }
        public virtual DbSet<wilayas> wilaya { get; set; }
        public virtual DbSet<Request> Requests { get; set; }
        public virtual DbSet<DispositionPrise> DispositionPrise { get; set; }
        public virtual DbSet<Motif> Motif { get; set; }
    
        public virtual ObjectResult<GetUsersMessagesSentReceived_Result> GetUsersMessagesSentReceived(string userId, Nullable<int> requestNum, Nullable<int> wilayaNum, Nullable<int> year)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var requestNumParameter = requestNum.HasValue ?
                new ObjectParameter("RequestNum", requestNum) :
                new ObjectParameter("RequestNum", typeof(int));
    
            var wilayaNumParameter = wilayaNum.HasValue ?
                new ObjectParameter("WilayaNum", wilayaNum) :
                new ObjectParameter("WilayaNum", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUsersMessagesSentReceived_Result>("GetUsersMessagesSentReceived", userIdParameter, requestNumParameter, wilayaNumParameter, yearParameter);
        }
    
        public virtual int spproc_filter_Reclamation(Nullable<int> num, Nullable<int> id_state, string objet, Nullable<System.DateTime> date, Nullable<int> num_wilaya, Nullable<int> num_requerant, Nullable<int> id_motif, string corp_requete, Nullable<int> id_trans, string result_traitement)
        {
            var numParameter = num.HasValue ?
                new ObjectParameter("num", num) :
                new ObjectParameter("num", typeof(int));
    
            var id_stateParameter = id_state.HasValue ?
                new ObjectParameter("id_state", id_state) :
                new ObjectParameter("id_state", typeof(int));
    
            var objetParameter = objet != null ?
                new ObjectParameter("objet", objet) :
                new ObjectParameter("objet", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var num_wilayaParameter = num_wilaya.HasValue ?
                new ObjectParameter("num_wilaya", num_wilaya) :
                new ObjectParameter("num_wilaya", typeof(int));
    
            var num_requerantParameter = num_requerant.HasValue ?
                new ObjectParameter("num_requerant", num_requerant) :
                new ObjectParameter("num_requerant", typeof(int));
    
            var id_motifParameter = id_motif.HasValue ?
                new ObjectParameter("id_motif", id_motif) :
                new ObjectParameter("id_motif", typeof(int));
    
            var corp_requeteParameter = corp_requete != null ?
                new ObjectParameter("corp_requete", corp_requete) :
                new ObjectParameter("corp_requete", typeof(string));
    
            var id_transParameter = id_trans.HasValue ?
                new ObjectParameter("id_trans", id_trans) :
                new ObjectParameter("id_trans", typeof(int));
    
            var result_traitementParameter = result_traitement != null ?
                new ObjectParameter("result_traitement", result_traitement) :
                new ObjectParameter("result_traitement", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spproc_filter_Reclamation", numParameter, id_stateParameter, objetParameter, dateParameter, num_wilayaParameter, num_requerantParameter, id_motifParameter, corp_requeteParameter, id_transParameter, result_traitementParameter);
        }
    
        public virtual ObjectResult<Request> spproc_filter_requete(string query)
        {
            var queryParameter = query != null ?
                new ObjectParameter("query", query) :
                new ObjectParameter("query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Request>("spproc_filter_requete", queryParameter);
        }
    
        public virtual ObjectResult<Request> spproc_filter_requete(string query, MergeOption mergeOption)
        {
            var queryParameter = query != null ?
                new ObjectParameter("query", query) :
                new ObjectParameter("query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Request>("spproc_filter_requete", mergeOption, queryParameter);
        }
    
        public virtual int spproc_filter_requete1(string query)
        {
            var queryParameter = query != null ?
                new ObjectParameter("query", query) :
                new ObjectParameter("query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spproc_filter_requete1", queryParameter);
        }
    
        public virtual ObjectResult<AspNetUsers> spproc_filter_users(string query)
        {
            var queryParameter = query != null ?
                new ObjectParameter("query", query) :
                new ObjectParameter("query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AspNetUsers>("spproc_filter_users", queryParameter);
        }
    
        public virtual ObjectResult<AspNetUsers> spproc_filter_users(string query, MergeOption mergeOption)
        {
            var queryParameter = query != null ?
                new ObjectParameter("query", query) :
                new ObjectParameter("query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AspNetUsers>("spproc_filter_users", mergeOption, queryParameter);
        }
    
        public virtual ObjectResult<requerant> spproc_filter_requerant(string query)
        {
            var queryParameter = query != null ?
                new ObjectParameter("query", query) :
                new ObjectParameter("query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<requerant>("spproc_filter_requerant", queryParameter);
        }
    
        public virtual ObjectResult<requerant> spproc_filter_requerant(string query, MergeOption mergeOption)
        {
            var queryParameter = query != null ?
                new ObjectParameter("query", query) :
                new ObjectParameter("query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<requerant>("spproc_filter_requerant", mergeOption, queryParameter);
        }
    
        public virtual ObjectResult<GetUsersStoredProcedure_Result> GetUsersStoredProcedure(string query)
        {
            var queryParameter = query != null ?
                new ObjectParameter("query", query) :
                new ObjectParameter("query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUsersStoredProcedure_Result>("GetUsersStoredProcedure", queryParameter);
        }
    }
}
